http:
  port: 8080
admin:
  port: 9876
  host: localhost

apiEndpoints:
  users-api:
    host: '*'
    paths: '/api/users'
  user-details:
    host: '*'
    paths: '/api/users/*'

serviceEndpoints:
  # يمكنك إضافة خدمات خارجية هنا إذا لزم الأمر
  external-api:
    url: 'https://jsonplaceholder.typicode.com'

policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit

pipelines:
  # Pipeline لعرض قائمة المستخدمين
  users-list-pipeline:
    apiEndpoints:
      - users-api
    policies:
      - cors:
          - action:
              origin: '*'
              methods: ['GET', 'POST', 'PUT', 'DELETE']
              allowedHeaders: ['Content-Type', 'Authorization']
      - log:
          - action:
              message: 'طلب المستخدمين: ${req.method} ${req.url} من ${req.ip}'
      - expression:
          - action:
              jscode: |
                // بيانات المستخدمين التجريبية
                const users = [
                  { 
                    id: 1, 
                    name: 'أحمد محمد علي', 
                    email: 'ahmed.mohamed@example.com',
                    phone: '+20123456789',
                    role: 'admin',
                    status: 'active',
                    createdAt: '2024-01-15T10:30:00Z'
                  },
                  { 
                    id: 2, 
                    name: 'فاطمة علي حسن', 
                    email: 'fatima.ali@example.com',
                    phone: '+20123456790',
                    role: 'user',
                    status: 'active',
                    createdAt: '2024-02-20T14:20:00Z'
                  },
                  { 
                    id: 3, 
                    name: 'محمود حسن أحمد', 
                    email: 'mahmoud.hassan@example.com',
                    phone: '+20123456791',
                    role: 'user',
                    status: 'inactive',
                    createdAt: '2024-03-10T09:15:00Z'
                  },
                  { 
                    id: 4, 
                    name: 'عائشة محمد صالح', 
                    email: 'aisha.saleh@example.com',
                    phone: '+20123456792',
                    role: 'moderator',
                    status: 'active',
                    createdAt: '2024-04-05T16:45:00Z'
                  },
                  { 
                    id: 5, 
                    name: 'يوسف عبدالله قاسم', 
                    email: 'yusuf.qasem@example.com',
                    phone: '+20123456793',
                    role: 'user',
                    status: 'active',
                    createdAt: '2024-05-12T11:30:00Z'
                  }
                ];
                
                // فلترة حسب الاستعلام إذا وجد
                let filteredUsers = users;
                const searchQuery = req.query.search;
                const roleFilter = req.query.role;
                const statusFilter = req.query.status;
                
                if (searchQuery) {
                  filteredUsers = filteredUsers.filter(user => 
                    user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                    user.email.toLowerCase().includes(searchQuery.toLowerCase())
                  );
                }
                
                if (roleFilter) {
                  filteredUsers = filteredUsers.filter(user => user.role === roleFilter);
                }
                
                if (statusFilter) {
                  filteredUsers = filteredUsers.filter(user => user.status === statusFilter);
                }
                
                // ترقيم الصفحات
                const page = parseInt(req.query.page) || 1;
                const limit = parseInt(req.query.limit) || 10;
                const startIndex = (page - 1) * limit;
                const endIndex = startIndex + limit;
                const paginatedUsers = filteredUsers.slice(startIndex, endIndex);
                
                // إعداد الاستجابة
                res.setHeader('Content-Type', 'application/json');
                res.status(200);
                res.json({
                  success: true,
                  message: 'تم جلب المستخدمين بنجاح',
                  data: paginatedUsers,
                  pagination: {
                    currentPage: page,
                    totalPages: Math.ceil(filteredUsers.length / limit),
                    totalUsers: filteredUsers.length,
                    usersPerPage: limit,
                    hasNextPage: endIndex < filteredUsers.length,
                    hasPrevPage: page > 1
                  },
                  filters: {
                    search: searchQuery || null,
                    role: roleFilter || null,
                    status: statusFilter || null
                  },
                  timestamp: new Date().toISOString()
                });

  # Pipeline لعرض مستخدم محدد بالـ ID
  user-details-pipeline:
    apiEndpoints:
      - user-details
    policies:
      - cors:
          - action:
              origin: '*'
              methods: ['GET', 'PUT', 'DELETE']
              allowedHeaders: ['Content-Type', 'Authorization']
      - log:
          - action:
              message: 'طلب تفاصيل مستخدم: ${req.method} ${req.url}'
      - expression:
          - action:
              jscode: |
                // استخراج ID من الرابط
                const userId = parseInt(req.params[0]);
                
                // بيانات المستخدمين
                const users = [
                  { 
                    id: 1, 
                    name: 'أحمد محمد علي', 
                    email: 'ahmed.mohamed@example.com',
                    phone: '+20123456789',
                    role: 'admin',
                    status: 'active',
                    createdAt: '2024-01-15T10:30:00Z',
                    lastLogin: '2024-09-25T08:15:00Z',
                    profilePicture: 'https://via.placeholder.com/150',
                    address: 'القاهرة، مصر'
                  },
                  { 
                    id: 2, 
                    name: 'فاطمة علي حسن', 
                    email: 'fatima.ali@example.com',
                    phone: '+20123456790',
                    role: 'user',
                    status: 'active',
                    createdAt: '2024-02-20T14:20:00Z',
                    lastLogin: '2024-09-24T19:30:00Z',
                    profilePicture: 'https://via.placeholder.com/150',
                    address: 'الإسكندرية، مصر'
                  },
                  { 
                    id: 3, 
                    name: 'محمود حسن أحمد', 
                    email: 'mahmoud.hassan@example.com',
                    phone: '+20123456791',
                    role: 'user',
                    status: 'inactive',
                    createdAt: '2024-03-10T09:15:00Z',
                    lastLogin: '2024-08-15T12:00:00Z',
                    profilePicture: 'https://via.placeholder.com/150',
                    address: 'الجيزة، مصر'
                  }
                ];
                
                // البحث عن المستخدم
                const user = users.find(u => u.id === userId);
                
                res.setHeader('Content-Type', 'application/json');
                
                if (user) {
                  res.status(200);
                  res.json({
                    success: true,
                    message: 'تم جلب بيانات المستخدم بنجاح',
                    data: user,
                    timestamp: new Date().toISOString()
                  });
                } else {
                  res.status(404);
                  res.json({
                    success: false,
                    message: 'المستخدم غير موجود',
                    error: {
                      code: 'USER_NOT_FOUND',
                      details: `لا يوجد مستخدم بالمعرف: ${userId}`
                    },
                    timestamp: new Date().toISOString()
                  });
                }
